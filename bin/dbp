#!/usr/bin/env bash

image_name="ustwo/docker-boilerplate"
container_name="dbp"


# -s standalone runs a self-contained container
if [[ $2 = "-s" ]] ; then
  container_name="s-dbp"
fi


case $1 in
pull)
  docker pull $image_name
  ;;
rm)
  docker rm -f $container_name
  ;;
init)
  # -s standalone runs a self-contained container
  if [[ $2 = "-s" ]] ; then
    docker run -d -p 0.0.0.0:8889:8888 \
      --name $container_name $image_name
  else
    docker run -d  \
      -p 0.0.0.0:8888:8888 \
      --name $container_name \
      -w /home/dbp/app \
      -v $(pwd)/package.json:/home/dbp/package.json \
      -v $(pwd)/app:/home/dbp/app $image_name
  fi
  ;;
start)
  docker start $container_name
  ;;
restart)
  docker restart $container_name
  ;;
stop)
  docker stop $container_name
  ;;
update)
  docker exec $container_name npm install
  ;;
compile)
  docker exec $container_name npm run-script compile
  ;;
shell)
  docker exec -it $container_name bash
  ;;
open)
  open http://$(boot2docker ip):8888
  ;;
watch)
  fswatch -or -l 0.2 -e \.styl $(pwd)/app/src \
  | xargs -n1 docker exec $container_name npm run-script compile
  ;;
logs)
  docker logs -f $container_name
  ;;
*)
  cat <<-EOS
compile - Compiles jsx.
help    - This help.
init    - Spins up a new container. accepts a flag -s to run a standalone container.
logs    - Tails the server logs.
pull    - Pulls a fresh image from the registry.
restart - Restarts the node server.
rm      - Destroys the node server and the image. accepts a flag -s to run a standalone container.
shell   - Opens an interactive shell to the docker container.
start   - Starts the node server.
stop    - Stops the node server.
update  - Installs npm packages.
watch   - Watches and compiles jsx.
EOS
  ;;
esac
